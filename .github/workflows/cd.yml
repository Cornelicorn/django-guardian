# Release the package on GitHub and publish it to PyPI.

name: cd

on:
  workflow_dispatch:
    inputs:
      ref:
        description: "Branch or commit SHA to publish and tag"
        type: string
        required: true
      tag:
        description: "Tag  to apply"
        type: string
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Get package version
        id: version
        run: |
          VERSION=$(python setup.py --version)
          echo "package_version=$VERSION" >> $GITHUB_OUTPUT

      - name: Determine if version is a candidate (prerelease)
        id: candidate
        run: |
          VERSION="${{ steps.version.outputs.package_version }}"
          # Test against the regex
          if [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "is_candidate=false" >> $GITHUB_OUTPUT
          else
            echo "is_candidate=true" >> $GITHUB_OUTPUT
          fi

      - name: Verify given tag matches package version
        # Since we trigger releases manually, this cross-checks the user's intention
        id: verify-tag
        run: |
          if [ "${{ steps.version.outputs.package_version }}" != "${{ inputs.tag }}" ]; then
            echo "::error ::Provided tag ('${{ inputs.tag }}') does not match the package version ('${{ steps.version.outputs.package_version }}')."
            exit 1
          fi

      - uses: ncipollo/release-action@v1
        with:
          draft: false
          generateReleaseNotes: true
          commit: ${{ inputs.ref }}
          tag: ${{ inputs.tag || steps.version.outputs.package_version }}
          prerelease: ${{ steps.candidate.outputs.is_candidate }}

  publish:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}

      - name: Install python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install `build`
        run: python -m pip install --upgrade build

      - name: Build package
        run: python -m build

      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@v1.12.4
